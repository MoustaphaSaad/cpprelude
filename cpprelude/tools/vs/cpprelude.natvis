<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <!-- Memory -->
  <Type Name="cppr::Slice&lt;*&gt;">
    <DisplayString Condition="size == 0">empty</DisplayString>
    <DisplayString Condition="size != 0">{{ count={size/sizeof($T1)} }}</DisplayString>
  </Type>

  <Type Name="cppr::Allocator_Trait">
    <DisplayString>Allocator_Trait</DisplayString>
    <Expand>
      <Item Name="alloc">_alloc</Item>
      <Item Name="realloc">_realloc</Item>
      <Item Name="free">_free</Item>
    </Expand>
  </Type>

  <Type Name="cppr::Memory_Context">
    <DisplayString>Memory_Context</DisplayString>
    <Expand>
      <Item Name="[Allocator_Trait]" ExcludeView="simple">_allocator</Item>
      <Item Name="[Flags]" ExcludeView="simple">_flags</Item>
    </Expand>
  </Type>


  <!-- Types -->
  <Type Name="cppr::String">
    <DisplayString Condition="_bytes.size == 0">empty</DisplayString>
    <DisplayString Condition="_bytes.size != 0" Encoding="Utf8">{_bytes.ptr,[_bytes_size - 1]s8}</DisplayString>
  </Type>

  <Type Name="cppr::String_Range">
    <DisplayString Condition="bytes.size == 0">empty</DisplayString>
    <DisplayString Condition="bytes.size != 0" Encoding="Utf8">{bytes.ptr,[bytes.size]s8}</DisplayString>
  </Type>

  <Type Name="cppr::Slice&lt;byte&gt;">
    <DisplayString Condition="size == 0">empty</DisplayString>
    <DisplayString Condition="size != 0" Encoding="Utf8">{ptr,[size]s8}</DisplayString>
    <Expand>
      <Item Name="[ptr]">ptr</Item>
      <Item Name="[size]">size</Item>
      <Item Name="[count]">size/sizeof($T1)</Item>
      <ArrayItems>
        <Size>size/sizeof($T1)</Size>
        <ValuePointer>ptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="cppr::Rune">
    <DisplayString Encoding="Utf8">{data,c}</DisplayString>
  </Type>


  <!-- Containers -->
  <Type Name="cppr::Dynamic_Array&lt;*&gt;">
    <Intrinsic Name="capacity" Expression="_data.size / sizeof($T1)"/>
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="[capacity]" ExcludeView="simple">capacity()</Item>
      <Item Name="[Memory_Context]" ExcludeView="simple">mem_context</Item>
      <Item Name="[Owner]" ExcludeView="simple">_data</Item>
      <ArrayItems>
        <Size>_count</Size>
        <ValuePointer>_data.ptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="cppr::Slice&lt;*&gt;">
    <DisplayString Condition="size == 0">empty</DisplayString>
    <DisplayString Condition="size != 0">{{ count={size/sizeof($T1)} }}</DisplayString>
    <Expand>
      <Item Name="[ptr]">ptr</Item>
      <Item Name="[size]">size</Item>
      <Item Name="[count]">size/sizeof($T1)</Item>
      <ArrayItems>
        <Size>size/sizeof($T1)</Size>
        <ValuePointer>ptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="cppr::Single_List&lt;*&gt;">
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="[Memory_Context]" ExcludeView="simple">mem_context</Item>
      <LinkedListItems>
        <HeadPointer>_head</HeadPointer>
        <NextPointer>next</NextPointer>
        <ValueNode>value</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="cppr::Forward_Range&lt;*&gt;">
    <DisplayString Condition="ptr == _end">empty</DisplayString>
    <Expand>
      <Item Name="[begin]" ExcludeView="simple">ptr</Item>
      <Item Name="[end]" ExcludeView="simple">_end</Item>
      <CustomListItems>
        <Variable Name="iter" InitialValue="ptr"/>
        <Loop>
          <Break Condition="iter == _end || iter == 0"/>
          <Item>iter-&gt;value</Item>
          <Exec>iter = iter-&gt;next</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="cppr::Double_List&lt;*&gt;">
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="[Memory_Context]" ExcludeView="simple">mem_context</Item>
      <LinkedListItems>
        <Size>_count</Size>
        <HeadPointer>_head->next</HeadPointer>
        <NextPointer>next</NextPointer>
        <ValueNode>value</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="cppr::Bidirectional_Range&lt;*&gt;">
    <DisplayString Condition="ptr == _end">empty</DisplayString>
    <Expand>
      <Item Name="[begin]" ExcludeView="simple">ptr</Item>
      <Item Name="[end]" ExcludeView="simple">_end</Item>
      <CustomListItems>
        <Variable Name="iter" InitialValue="ptr"/>
        <Loop>
          <Break Condition="iter == _end || iter == 0"/>
          <Item>iter-&gt;value</Item>
          <Exec>iter = iter-&gt;next</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="cppr::Stack_Array&lt;*&gt;">
    <DisplayString Condition="_array._count == 0">empty</DisplayString>
    <DisplayString Condition="_array._count != 0">{{ count={_array._count} }}</DisplayString>
    <Expand>
      <Item Name="[Dynamic_Array]" ExcludeView="simple">_array</Item>
      <Item Name="count">_array._count</Item>
      <ArrayItems>
        <Size>_array._count</Size>
        <ValuePointer>_array._data.ptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="cppr::Stack_List&lt;*&gt;">
    <DisplayString Condition="_list._count == 0">empty</DisplayString>
    <DisplayString Condition="_list._count != 0">{{ count={_list._count} }}</DisplayString>
    <Expand>
      <Item Name="[Single_List]" ExcludeView="simple">_list</Item>
      <Item Name="[Memory_Context]" ExcludeView="simple">_list.mem_context</Item>
      <Item Name="count">_list._count</Item>
      <LinkedListItems>
        <HeadPointer>_list._head</HeadPointer>
        <NextPointer>next</NextPointer>
        <ValueNode>value</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="cppr::Ring_Array&lt;*&gt;">
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="[Memory_Context]" ExcludeView="simple">mem_context</Item>
      <Item Name="count">_count</Item>
      <IndexListItems>
        <Size>_count</Size>
        <ValueNode>_data.ptr[(_tail_index + 1 + $i) % (_data.size / sizeof($T1))]</ValueNode>
      </IndexListItems>
    </Expand>
  </Type>

  <Type Name="cppr::Ring_Range&lt;*&gt;">
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="count">_count</Item>
      <IndexListItems>
        <Size>_count</Size>
        <ValueNode>ptr[(_tail_index + 1 + $i) % (_capacity)]</ValueNode>
      </IndexListItems>
    </Expand>
  </Type>

  <Type Name="cppr::Queue_List&lt;*&gt;">
    <DisplayString Condition="_list._count == 0">empty</DisplayString>
    <DisplayString Condition="_list._count != 0">{{ count={_list._count} }}</DisplayString>
    <Expand>
      <Item Name="[Double_List]" ExcludeView="simple">_list</Item>
      <Item Name="[Memory_Context]" ExcludeView="simple">_list.mem_context</Item>
      <Item Name="count">_list._count</Item>
      <LinkedListItems>
        <HeadPointer>_list._head->next</HeadPointer>
        <NextPointer>next</NextPointer>
        <ValueNode>value</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="cppr::Priority_Queue&lt;*&gt;">
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="[Dynamic_Array]" ExcludeView="simple">_array</Item>
      <Item Name="[Memory_Context]" ExcludeView="simple">_array.mem_context</Item>
      <Item Name="count">_count</Item>
      <ArrayItems>
        <Size>_count</Size>
        <ValuePointer>_array._data.ptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="cppr::Red_Black_Tree&lt;*&gt;">
    <AlternativeType Name="cppr::Tree_Set&lt;*&gt;" />
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="[Memory_Context]" ExcludeView="simple">mem_context</Item>
      <TreeItems>
        <Size>_count</Size>
        <HeadPointer>_root</HeadPointer>
        <LeftPointer>left</LeftPointer>
        <RightPointer>right</RightPointer>
        <ValueNode>data</ValueNode>
      </TreeItems>
    </Expand>
  </Type>

  <Type Name="cppr::Red_Black_Map&lt;*&gt;">
    <AlternativeType Name="cppr::Tree_Map&lt;*&gt;" />
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="[Memory_Context]" ExcludeView="simple">mem_context</Item>
      <TreeItems>
        <Size>_count</Size>
        <HeadPointer>_root</HeadPointer>
        <LeftPointer>left</LeftPointer>
        <RightPointer>right</RightPointer>
        <ValueNode Name="{data.key}">data.value</ValueNode>
      </TreeItems>
    </Expand>
  </Type>

  <Type Name="cppr::Hash_Set&lt;*&gt;">
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="[Memory_Context]" ExcludeView="simple">mem_context</Item>
      <CustomListItems>
        <Variable Name="i" InitialValue="0"/>
        <Loop>
          <If Condition="i >= (_flags.size)">
            <Break/>
          </If>
          <If Condition="_flags.ptr[i] == 1">
            <Item>_values.ptr[i]</Item>
          </If>
          <Exec>i = i + 1</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="cppr::Hash_Map&lt;*&gt;">
    <DisplayString Condition="_count == 0">empty</DisplayString>
    <DisplayString Condition="_count != 0">{{ count={_count} }}</DisplayString>
    <Expand>
      <Item Name="[Memory_Context]" ExcludeView="simple">mem_context</Item>
      <CustomListItems>
        <Variable Name="i" InitialValue="0"/>
        <Loop>
          <If Condition="i >= (_flags.size)">
            <Break/>
          </If>
          <If Condition="i == 0">
            <Item Name="Key">"Value",sb</Item>
          </If>
          <If Condition="_flags.ptr[i] == 1">
            <Item Name="{_values.ptr[i].key}">_values.ptr[i].value</Item>
          </If>
          <Exec>i = i + 1</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>
  
</AutoVisualizer>
